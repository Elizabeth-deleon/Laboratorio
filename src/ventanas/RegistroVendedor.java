/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import controller.VendController;
import java.awt.EventQueue;
import java.util.Calendar;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import utilidades.ExaminadorCampos;
import utilidades.FiltraEntrada;
import utilidades.Helper;
import utilidades.VerificadorEntrada;

/**
 *
 * @author Grupo#3
 */
public class RegistroVendedor extends javax.swing.JInternalFrame {
    private int posicionRegistro = 0;
    private boolean esActualizacion = false;

    private VendController vc;
    /**
     * Creates new form RegistroVendedor
     */
    public RegistroVendedor() {
        initComponents();
        vc = new VendController();
        iniciarValores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pnlBotones = new javax.swing.JPanel();
        bntNuevo = new javax.swing.JButton();
        bntGuardar = new javax.swing.JButton();
        bntCancelar = new javax.swing.JButton();
        bntModificar = new javax.swing.JButton();
        bntEliminar = new javax.swing.JButton();
        bntSalir = new javax.swing.JButton();
        pnlEntradas = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApe = new javax.swing.JTextField();
        txtDir = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtRuc = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        dtFechaIngreso = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cbSexo = new javax.swing.JComboBox();
        txtCelular = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        ftxtVentas = new javax.swing.JFormattedTextField();
        dtFechaNac = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ftxtSueldo = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        chbLabora = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        pnlBuscar = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Registro Vendedor");
        setVisible(true);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        pnlBotones.setLayout(new java.awt.GridLayout(1, 0));

        bntNuevo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bntNuevo.setText("Nuevo");
        bntNuevo.setName("bntn"); // NOI18N
        bntNuevo.setPreferredSize(new java.awt.Dimension(67, 40));
        bntNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoVendedor(evt);
            }
        });
        pnlBotones.add(bntNuevo);

        bntGuardar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bntGuardar.setText("Guardar");
        bntGuardar.setEnabled(false);
        bntGuardar.setPreferredSize(new java.awt.Dimension(75, 40));
        bntGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntGuardarActionPerformed(evt);
            }
        });
        pnlBotones.add(bntGuardar);

        bntCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bntCancelar.setText("Cancelar");
        bntCancelar.setEnabled(false);
        bntCancelar.setPreferredSize(new java.awt.Dimension(77, 40));
        bntCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCancelarActionPerformed(evt);
            }
        });
        pnlBotones.add(bntCancelar);

        bntModificar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bntModificar.setText("Modificar");
        bntModificar.setName("bntUpdate"); // NOI18N
        bntModificar.setPreferredSize(new java.awt.Dimension(79, 40));
        bntModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntModificarActionPerformed(evt);
            }
        });
        pnlBotones.add(bntModificar);

        bntEliminar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bntEliminar.setText("Eliminar");
        bntEliminar.setName("btnDelete"); // NOI18N
        bntEliminar.setPreferredSize(new java.awt.Dimension(73, 40));
        bntEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntEliminarActionPerformed(evt);
            }
        });
        pnlBotones.add(bntEliminar);

        bntSalir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bntSalir.setText("Salir");
        bntSalir.setName("bntSlr"); // NOI18N
        bntSalir.setPreferredSize(new java.awt.Dimension(53, 40));
        bntSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntSalirActionPerformed(evt);
            }
        });
        pnlBotones.add(bntSalir);

        jPanel2.add(pnlBotones, java.awt.BorderLayout.PAGE_END);

        pnlEntradas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlEntradas.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nombres:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(9, 6, 3, 0);
        pnlEntradas.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Apellidos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 3, 0);
        pnlEntradas.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Direcci√≥n:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 3, 0);
        pnlEntradas.add(jLabel4, gridBagConstraints);

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtNombre.setPreferredSize(new java.awt.Dimension(320, 21));
        txtNombre.setSelectionColor(new java.awt.Color(153, 255, 153));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 3, 0);
        pnlEntradas.add(txtNombre, gridBagConstraints);

        txtApe.setEditable(false);
        txtApe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtApe.setPreferredSize(new java.awt.Dimension(320, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 3, 0);
        pnlEntradas.add(txtApe, gridBagConstraints);

        txtDir.setEditable(false);
        txtDir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtDir.setPreferredSize(new java.awt.Dimension(440, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 3, 0);
        pnlEntradas.add(txtDir, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Cedula/RUC:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 3, 0);
        pnlEntradas.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Telefono:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 3, 0);
        pnlEntradas.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Fecha Ingreso:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 0);
        pnlEntradas.add(jLabel7, gridBagConstraints);

        txtRuc.setEditable(false);
        txtRuc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtRuc.setName("txtruc"); // NOI18N
        txtRuc.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 3, 0);
        pnlEntradas.add(txtRuc, gridBagConstraints);

        txtTelefono.setEditable(false);
        txtTelefono.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTelefono.setName("txTelefono"); // NOI18N
        txtTelefono.setPreferredSize(new java.awt.Dimension(120, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 3, 0);
        pnlEntradas.add(txtTelefono, gridBagConstraints);

        dtFechaIngreso.setDateFormatString("dd/MM/yyyy");
        dtFechaIngreso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dtFechaIngreso.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        pnlEntradas.add(dtFechaIngreso, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Sexo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 3, 0);
        pnlEntradas.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Celular:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 3, 0);
        pnlEntradas.add(jLabel9, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Ventas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 14, 0);
        pnlEntradas.add(jLabel10, gridBagConstraints);

        cbSexo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "MASCULINO", "FEMENINO" }));
        cbSexo.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 3, 4);
        pnlEntradas.add(cbSexo, gridBagConstraints);

        txtCelular.setEditable(false);
        txtCelular.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCelular.setMinimumSize(new java.awt.Dimension(120, 20));
        txtCelular.setName("txCelular"); // NOI18N
        txtCelular.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 3, 4);
        pnlEntradas.add(txtCelular, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Email:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 8, 0);
        pnlEntradas.add(jLabel11, gridBagConstraints);

        txtEmail.setEditable(false);
        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtEmail.setInputVerifier(new VerificadorEntrada());
        txtEmail.setName("txEmail"); // NOI18N
        txtEmail.setPreferredSize(new java.awt.Dimension(440, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 8, 0);
        pnlEntradas.add(txtEmail, gridBagConstraints);

        ftxtVentas.setEditable(false);
        ftxtVentas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        ftxtVentas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftxtVentas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ftxtVentas.setPreferredSize(new java.awt.Dimension(119, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 8, 0);
        pnlEntradas.add(ftxtVentas, gridBagConstraints);

        dtFechaNac.setDateFormatString("dd/MM/yyyy");
        dtFechaNac.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        pnlEntradas.add(dtFechaNac, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Fecha Nacimiento:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        pnlEntradas.add(jLabel12, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Sueldo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 6, 8, 0);
        pnlEntradas.add(jLabel13, gridBagConstraints);

        ftxtSueldo.setEditable(false);
        ftxtSueldo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        ftxtSueldo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftxtSueldo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ftxtSueldo.setName("txtsueldo"); // NOI18N
        ftxtSueldo.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 8, 0);
        pnlEntradas.add(ftxtSueldo, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Labora:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 38, 8, 0);
        pnlEntradas.add(jLabel14, gridBagConstraints);

        chbLabora.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chbLabora.setSelected(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 8, 0);
        pnlEntradas.add(chbLabora, gridBagConstraints);

        jPanel2.add(pnlEntradas, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Codigo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 3, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        txtCodigo.setEditable(false);
        txtCodigo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCodigo.setPreferredSize(new java.awt.Dimension(180, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 3, 14);
        jPanel3.add(txtCodigo, gridBagConstraints);

        pnlBuscar.setLayout(new javax.swing.BoxLayout(pnlBuscar, javax.swing.BoxLayout.LINE_AXIS));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGENES/BUSCAR.JPG"))); // NOI18N
        jButton3.setToolTipText("Buscar");
        jButton3.setName("bntBcr"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        pnlBuscar.add(jButton3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 3, 0);
        jPanel3.add(pnlBuscar, gridBagConstraints);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntSalirActionPerformed
       // iniciarValores();
        
        this.dispose();
        if(this.getDesktopPane() != null)
            this.getDesktopPane().remove(this);
    }//GEN-LAST:event_bntSalirActionPerformed

    private void nuevoVendedor(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoVendedor
        generarNuevoVendedor();
    }//GEN-LAST:event_nuevoVendedor

    private void bntCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCancelarActionPerformed
        removerFiltroCampos();        
        ExaminadorCampos.habilitarComponentes(pnlBotones, true, false,ExaminadorCampos.TIPO_HABILITAR_POR_NOMBRE);
        ExaminadorCampos.habilitarComponentes(pnlEntradas, true, false,ExaminadorCampos.TIPO_HABILITAR_TODO);
        ExaminadorCampos.limpiarTexto(pnlEntradas, true,"");
        bntSalir.setEnabled(true);
        txtCodigo.setText("");
        dtFechaIngreso.setEnabled(false);
        dtFechaIngreso.setDate(null);
        dtFechaNac.setEnabled(false);
        dtFechaNac.setDate(null);
        if(VendController.getVendedor() == null)
        {
           getUltimoVendedor(); 
        }else{
            setVendedorObtenido(null);
        }
            
        this.esActualizacion = false;
    }//GEN-LAST:event_bntCancelarActionPerformed

    private void bntGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntGuardarActionPerformed
       this.gaRegistro(this.esActualizacion);
    }//GEN-LAST:event_bntGuardarActionPerformed

    private void bntModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntModificarActionPerformed
        ExaminadorCampos.habilitarComponentes(pnlBotones, false, true,ExaminadorCampos.TIPO_HABILITAR_POR_NOMBRE);
        ExaminadorCampos.habilitarComponentes(pnlEntradas, true, true,ExaminadorCampos.TIPO_HABILITAR_TODO);
        bntSalir.setEnabled(true);        
        dtFechaIngreso.setEnabled(true);
        dtFechaNac.setEnabled(true);
        bntEliminar.setEnabled(true);
        bntGuardar.setEnabled(true);
        bntCancelar.setEnabled(true);
        bntModificar.setEnabled(false);
        setFiltroCampos();
        this.esActualizacion = true;
    }//GEN-LAST:event_bntModificarActionPerformed

    private void bntEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntEliminarActionPerformed
       if(txtCodigo.getText().equals(VendController.getVendedor().getId()))
        {
            int opcion = JOptionPane.showInternalConfirmDialog(getContenedor(), "¬øEsta seguro que desea borrar al:\nVendedor: "+""+
                    VendController.getVendedor().toString()+"\nCodigo: "+txtCodigo.getText()+" ?", "¬øDesea Eliminar?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(opcion==JOptionPane.OK_OPTION)
            {
                int resultado = vc.eliminarRegistro(txtCodigo.getText());
                if(resultado != 1)
                {
                    JOptionPane.showInternalMessageDialog(getContenedor(), "No se pudo eliminar", "Error: al eliminar", JOptionPane.ERROR_MESSAGE);
                    return;
                }else
                {
                    JOptionPane.showInternalMessageDialog(getContenedor(), "Vendedor Eliminado Correctamente", "Eliminacion Correcta", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        }        
        getUltimoVendedor();
        this.esActualizacion = false;
    }//GEN-LAST:event_bntEliminarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       PanelVistaVendedor pvc = new PanelVistaVendedor();
       JLabel aviso = new JLabel("Doble click para seleccionar");
        aviso.setEnabled(false); 
        aviso.setOpaque(true);
        JOptionPane.showInternalOptionDialog(this, pvc, "Seleccione un Cliente",JOptionPane.OK_CANCEL_OPTION,
                                            JOptionPane.QUESTION_MESSAGE, null, new Object[]{aviso},null);
      if(pvc.getCl() != null)
      {
          setVendedorObtenido(pvc);
      }
    }//GEN-LAST:event_jButton3ActionPerformed

    
     public void generarNuevoVendedor()
    {
        removerFiltroCampos();
        ExaminadorCampos.limpiarTexto(pnlEntradas, true,"");
        ExaminadorCampos.habilitarComponentes(pnlBotones, true, true,ExaminadorCampos.TIPO_HABILITAR_POR_NOMBRE);
        ExaminadorCampos.habilitarComponentes(pnlEntradas, true, true,ExaminadorCampos.TIPO_HABILITAR_TODO);
        bntSalir.setEnabled(true);
        String ultimoId = vc.getCodigoUltimoRegistro();
        ultimoId = Helper.generarCodigo(ultimoId, Helper.PREFIJO_VENDEDOR);
        txtCodigo.setText(ultimoId);
        dtFechaIngreso.setDate(Calendar.getInstance().getTime());
        dtFechaIngreso.setEnabled(true);
        dtFechaNac.setEnabled(true);
        dtFechaNac.setDate(Calendar.getInstance().getTime());
        ftxtVentas.setValue(new Double(0.0));
        ftxtSueldo.setValue(new Double(0.0));
        this.chbLabora.setSelected(true);
        setFiltroCampos();
    }
     
     private void setFiltroCampos()
    {        
        Helper.setFiltraEntrada(txtNombre.getDocument(), FiltraEntrada.SOLO_LETRAS,30,true);
        Helper.setFiltraEntrada(txtApe.getDocument(), FiltraEntrada.SOLO_LETRAS,30,true);
        Helper.setFiltraEntrada(txtDir.getDocument(), FiltraEntrada.DEFAULT,80,true);
        Helper.setFiltraEntrada(txtRuc.getDocument(), FiltraEntrada.SOLO_NUMEROS,13,false);
        Helper.setFiltraEntrada(txtTelefono.getDocument(), FiltraEntrada.SOLO_NUMEROS,9,true);
        Helper.setFiltraEntrada(txtCelular.getDocument(), FiltraEntrada.SOLO_NUMEROS,9,true);
        
    }   
    
    private void removerFiltroCampos()
    {
        Helper.removerFiltraEntrada(txtNombre.getDocument());
        Helper.removerFiltraEntrada(txtApe.getDocument());
        Helper.removerFiltraEntrada(txtDir.getDocument());
        Helper.removerFiltraEntrada(txtRuc.getDocument());
        Helper.removerFiltraEntrada(txtTelefono.getDocument());
        Helper.removerFiltraEntrada(txtCelular.getDocument());        
    }   
    
    
    private void gaRegistro(boolean actualizar)
    {
        String mensaje = "¬øDesea registrar nuevo Vendedor?";
        String titulo = "¬øDesea Registrar?";
        
        if(actualizar)
        {
            mensaje = "¬øDesea actualizar los datos del Vendedor?";
            titulo = "Desea Actualizar";
            if(!verficarCambio())
            {
               JOptionPane.showInternalMessageDialog(this, "Ningun dato ha sido cambiado", "no se puede actualizar", JOptionPane.ERROR_MESSAGE); 
               return;
            }
        }
        boolean valido = ExaminadorCampos.verificarCamposObligatorios(pnlEntradas,true);
        System.out.println("es valido = "+valido);
        if(valido)
        {
            if(dtFechaIngreso.getCalendar() == null)
            {
                JOptionPane.showMessageDialog(this, "Porfavos selecciones la fecha de ingreso", "Fecha de Ingreso no especificada", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            VendController.getVendedor().setId(this.txtCodigo.getText());
            VendController.getVendedor().setNombre(this.txtNombre.getText());
            VendController.getVendedor().setApellido(this.txtApe.getText());
            VendController.getVendedor().setDireccion(this.txtDir.getText());
            VendController.getVendedor().setRuc(this.txtRuc.getText());
            VendController.getVendedor().setTelefono(this.txtTelefono.getText());
            VendController.getVendedor().setSexo(this.cbSexo.getSelectedItem().toString());
            VendController.getVendedor().setFechaIngreso(this.dtFechaIngreso.getCalendar().getTime());
            
            if(dtFechaNac.getCalendar() != null)
                VendController.getVendedor().setFechaNacimiento(this.dtFechaNac.getCalendar().getTime());
            
            VendController.getVendedor().setEmail(this.txtEmail.getText());
            VendController.getVendedor().setCelular(this.txtCelular.getText());
            VendController.getVendedor().setVentas(Double.parseDouble(this.ftxtVentas.getValue().toString()));
            VendController.getVendedor().setSueldo(Double.parseDouble(this.ftxtSueldo.getValue().toString()));
            if(chbLabora.isSelected())
            {
                short lbr = 1;
              VendController.getVendedor().setLabora(lbr);  
            }else
            {
                short lbr = 0;
              VendController.getVendedor().setLabora(lbr);  
            }
            VendController cc = new VendController();
            int opcion = JOptionPane.showInternalConfirmDialog(getContenedor(), mensaje, titulo, JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(opcion == JOptionPane.OK_OPTION)
            {
               if(!actualizar) 
               {
                    int resultado = cc.grabarRegistro(VendController.getVendedor());
                    if(resultado!=0)
                    {
                      JOptionPane.showMessageDialog(getContenedor(), "Vendedor aregado correctamente",
                                                "Registro guardado", JOptionPane.INFORMATION_MESSAGE);

                    }
               }else
                {
                    int resultado = cc.actualizarRegistro(txtCodigo.getText(), VendController.getVendedor());
                    if(resultado==1)
                    {
                      JOptionPane.showMessageDialog(getContenedor(), "Vendedor Actualizado correctamente",
                                                "Registro Actualizado", JOptionPane.INFORMATION_MESSAGE);
                     
                    }
                }
               
            }
            
            
        }else{
            EventQueue.invokeLater(new Runnable(){
                @Override
                public void run() {
                   JOptionPane.showMessageDialog(getContenedor(), "Los campos en rojo, son obligatorios",
                                        "Ingrese todos los datos Obligatorios", JOptionPane.ERROR_MESSAGE);
          
                }
            });              
        }
    }
    
    public RegistroVendedor getContenedor()
    {
        return this;
    }
    
    private boolean verficarCambio()
    {
        short vl = 0;
        if(chbLabora.isSelected())
        {
            vl = 1;
        }
        if(!VendController.getVendedor().getNombre().equals(this.txtNombre.getText()))
        {
            return true;
        }else if(!VendController.getVendedor().getApellido().equals(this.txtApe.getText()))
        {
           return true;
        }else if(!VendController.getVendedor().getDireccion().equals(this.txtDir.getText()))
        {
            return true;
        }else if(!VendController.getVendedor().getRuc().equals(this.txtRuc.getText()))
        {
            return true;
        }else if(!VendController.getVendedor().getTelefono().equals(this.txtTelefono.getText()))
        {
            return true;
        }else if(!VendController.getVendedor().getSexo().equals(this.cbSexo.getSelectedItem().toString()))
        {
          return true;  
        }else if(VendController.getVendedor().getFechaIngreso().compareTo(this.dtFechaIngreso.getCalendar().getTime())!= 0)
        {
           return true; 
        }else if(VendController.getVendedor().getFechaNacimiento().compareTo(this.dtFechaNac.getCalendar().getTime())!= 0)
        {
           return true; 
        }else if(!VendController.getVendedor().getEmail().equals(this.txtEmail.getText()))
        {
            return true;
        }else if(!VendController.getVendedor().getCelular().equals(this.txtCelular.getText()))
        {
           return true; 
        }else if(!VendController.getVendedor().getSueldo().equals(this.ftxtSueldo.getValue()))
        {
           return true; 
        }else if(!VendController.getVendedor().getVentas().equals(this.ftxtVentas.getValue()))
        {
           return true; 
        }else if(VendController.getVendedor().getLabora() != vl)
        {
           return true; 
        }else{
            return false;
        }
    }
    
    private void getUltimoVendedor()
    {
        
        vc.getUltimoVendedor();
        setVendedorObtenido(null);
    }
    
    public void setVendedorObtenido(PanelVistaVendedor pvv)
    {
        if(pvv != null)
        {
            this.txtCodigo.setText(pvv.getCl().getId());
            this.txtNombre.setText(pvv.getCl().getNombre());
            this.txtApe.setText(pvv.getCl().getApellido());
            this.txtDir.setText(pvv.getCl().getDireccion());
            this.txtRuc.setText(pvv.getCl().getRuc());
            this.txtTelefono.setText(pvv.getCl().getTelefono());
            this.cbSexo.setSelectedItem(pvv.getCl().getSexo());
            this.dtFechaIngreso.setDate(pvv.getCl().getFechaIngreso());
            this.dtFechaNac.setDate(pvv.getCl().getFechaNacimiento());
            this.txtEmail.setText(pvv.getCl().getEmail());
            this.txtCelular.setText(pvv.getCl().getCelular());
            this.ftxtSueldo.setValue(pvv.getCl().getSueldo());
            ftxtVentas.setValue(pvv.getCl().getVentas());
            if(pvv.getCl().getLabora() == 1)
                {
                   chbLabora.setSelected(true); 
                }else
                {
                    chbLabora.setSelected(false);
                }
            resetPosicionRegistro();
            return;
        }
        this.txtCodigo.setText(VendController.getVendedor().getId());
        this.txtNombre.setText(VendController.getVendedor().getNombre());
        this.txtApe.setText(VendController.getVendedor().getApellido());
        this.txtDir.setText(VendController.getVendedor().getDireccion());
        this.txtRuc.setText(VendController.getVendedor().getRuc());
        this.txtTelefono.setText(VendController.getVendedor().getTelefono());
        this.cbSexo.setSelectedItem(VendController.getVendedor().getSexo());
        this.dtFechaIngreso.setDate(VendController.getVendedor().getFechaIngreso());
        this.dtFechaNac.setDate(VendController.getVendedor().getFechaNacimiento());
        this.txtEmail.setText(VendController.getVendedor().getEmail());
        this.txtCelular.setText(VendController.getVendedor().getCelular());
        this.ftxtSueldo.setValue(VendController.getVendedor().getSueldo());
        ftxtVentas.setValue(VendController.getVendedor().getVentas());
        if(VendController.getVendedor().getLabora() == 1)
            {
               chbLabora.setSelected(true); 
            }else
            {
                chbLabora.setSelected(false);
            }
        
    }
    
    public void resetPosicionRegistro()
    {
        posicionRegistro = 2;
    }
    
    public void iniciarValores()
    {
        ExaminadorCampos.habilitarComponentes(pnlBotones, true, false,ExaminadorCampos.TIPO_HABILITAR_POR_NOMBRE);
        ExaminadorCampos.habilitarComponentes(pnlEntradas, true, false,ExaminadorCampos.TIPO_HABILITAR_TODO);        
        vc = new VendController();
        dtFechaIngreso.setEnabled(false); 
        bntSalir.setEnabled(true);
        getUltimoVendedor();
        posicionRegistro = vc.getNumVendedor(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntCancelar;
    private javax.swing.JButton bntEliminar;
    private javax.swing.JButton bntGuardar;
    private javax.swing.JButton bntModificar;
    private javax.swing.JButton bntNuevo;
    private javax.swing.JButton bntSalir;
    private javax.swing.JComboBox cbSexo;
    private javax.swing.JCheckBox chbLabora;
    private com.toedter.calendar.JDateChooser dtFechaIngreso;
    private com.toedter.calendar.JDateChooser dtFechaNac;
    private javax.swing.JFormattedTextField ftxtSueldo;
    private javax.swing.JFormattedTextField ftxtVentas;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlBuscar;
    private javax.swing.JPanel pnlEntradas;
    private javax.swing.JTextField txtApe;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRuc;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
